---
- name: Users | Custom | Set a hostname
  ansible.builtin.hostname:
    name: "{{ custom_hostname }}"

- name: Users | Custom | Create user
  ansible.builtin.user:
    name: "{{ custom_user }}"
    group: "{{ custom_user }}"
    groups: "{{ sudo_group }}"
    append: true
    password: "{{ custom_user_passwd }}"
    shell: /bin/zsh
    state: present

- name: Users | Custom | Stat sudoers file
  ansible.builtin.stat:
    path: "/etc/sudoers.d/sudoers_{{ custom_user }}"
  register: sudoers_file

- name: Users | Custom | Copy sudoers file
  ansible.builtin.copy:
    src: "users/sudoers_custom_user"
    dest: "/etc/sudoers.d/sudoers_{{ custom_user }}"
    owner: root
    group: root
    mode: 0440
  register: new_sudoers_file
  when: sudoers_file.stat.exists == false

- name: Users | Custom | Change sudoers file
  ansible.builtin.lineinfile:
    dest: "/etc/sudoers.d/sudoers_{{ custom_user }}"
    regexp: "^custom_user"
    line: "{{ custom_user }} ALL=(ALL) NOPASSWD: ALL"
  when: new_sudoers_file.changed

- name: Users | Custom | Stat.config folder
  ansible.builtin.stat:
    path: "/home/{{ custom_user }}/.config"
  register: config_dir

- name: Users | Custom | Create config directories
  ansible.builtin.file:
    path: "/home/{{ custom_user }}/{{ item.dir }}"
    state: directory
    owner: "{{ custom_user }}"
    group: "{{ custom_user }}"
    mode: 0700
  with_items:
    - { dir: ".config" }
  when: config_dir.stat.exists == false

- name: Users | Custom | Create config directories
  ansible.builtin.file:
    path: "/home/{{ custom_user }}/{{ item.dir }}"
    state: directory
    owner: "{{ custom_user }}"
    group: "{{ custom_user }}"
    mode: 0700
  with_items:
    - { dir: ".config/htop" }
    - { dir: "github" }
    - { dir: "{{ temp_dir }}" }
    - { dir: ".ssh" }
    - { dir: ".zsh" }

- name: Users | Custom | Copy dotfiles
  ansible.builtin.copy:
    src: "users/custom_user/{{ item.src }}"
    dest: "/home/{{ custom_user }}/{{ item.dest }}"
    owner: "{{ custom_user }}"
    group: "{{ custom_user }}"
    mode: 0600
  with_items:
    - { src: "htop/htoprc", dest: ".config/htop/htoprc" }
    - { src: "inputrc", dest: ".inputrc" }
    - { src: "zsh/zshrc", dest: ".zshrc" }
    - { src: "zsh/p10k.zsh", dest: ".zsh/.p10k.zsh" }

- name: Users | Custom | Clone zsh-autosuggestions plugin repository
  become_user: "{{ custom_user }}"
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: "/home/{{ custom_user }}/.zsh/zsh-autosuggestions"
    force: yes

- name: Users | Custom | Clone zsh-syntax-highlighting plugin repository
  become_user: "{{ custom_user }}"
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "/home/{{ custom_user }}/.zsh/zsh-syntax-highlighting"
    force: yes

- name: Users | Custom | Clone powerlevel10k plugin repository
  become_user: "{{ custom_user }}"
  ansible.builtin.git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "/home/{{ custom_user }}/.zsh/powerlevel10k"
    force: yes

- name: Users | Custom | Copy zsh config files
  ansible.builtin.copy:
    src: "users/custom_user/zsh/{{ item.src }}"
    dest: "/home/{{ custom_user }}/.zsh/{{ item.src }}"
    owner: "{{ custom_user }}"
    group: "{{ custom_user }}"
    mode: 0600
  with_items:
    - { src: "aliases.zsh" }
    - { src: "bindkey.zsh" }
    - { src: "completion.zsh" }
    - { src: "exports.zsh" }
    - { src: "functions.zsh" }
    - { src: "history.zsh" }
    - { src: "path.zsh" }
    - { src: "plugins.zsh" }
    - { src: "prompt.zsh" }
    - { src: "setopt.zsh" }
    - { src: "theming.zsh" }
